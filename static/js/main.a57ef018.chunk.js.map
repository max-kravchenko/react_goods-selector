{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","clearSelection","setState","selectGood","good","this","className","type","onClick","map","classNames","RemoveButton","AddButton","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAe,CACbC,aAAc,OAFlB,EAKEC,eAAiB,WACf,EAAKC,SAAS,CAAEF,aAAc,MANlC,EASEG,WAAa,SAACC,GACZ,EAAKF,SAAS,CAAEF,aAAcI,KAVlC,4CAaE,WAAU,IAAD,OACCJ,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,oBAAhB,UACoB,KAAjBN,EACI,oBAAIM,UAAU,QAAd,+BAED,qBAAIA,UAAU,sCAAd,oBACMN,EADN,gBAGE,wBACE,aAAW,SACX,UAAQ,cACRO,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKJ,oBAKtB,uBAAOK,UAAU,QAAjB,SACE,gCACGT,EAAMY,KAAI,SAACL,GAAD,OACT,qBAEE,UAAQ,OACRE,UACEI,IAAW,GACT,CAAE,+BAAgCV,IAAiBI,IALzD,UASE,6BACE,wBACE,UACEM,IACE,CAAEC,aAAcX,IAAiBI,GACjC,CAAEQ,UAAWZ,IAAiBI,IAGlCG,KAAK,SACLD,UAAWI,IACT,SACA,CAAE,UAAWV,IAAiBI,IAEhCI,QAASR,IAAiBI,EACtB,EAAKH,eACL,WACA,EAAKE,WAAWC,IAftB,SAkBGJ,IAAiBI,EACb,IACA,QAKT,oBAAI,UAAQ,YAAYE,UAAU,eAAlC,SACGF,MAnCEA,iBAtCrB,GAAyBS,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a57ef018.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    selectedGood: 'Jam',\n  };\n\n  clearSelection = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  selectGood = (good: string) => {\n    this.setState({ selectedGood: good });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {selectedGood === ''\n          ? (<h1 className=\"title\">No goods selected</h1>)\n          : (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {`${selectedGood} is selected`}\n\n              <button\n                aria-label=\"Remove\"\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={this.clearSelection}\n              />\n            </h1>\n          )}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => (\n              <tr\n                key={good}\n                data-cy=\"Good\"\n                className={\n                  classNames('',\n                    { 'has-background-success-light': selectedGood === good })\n                }\n              >\n\n                <td>\n                  <button\n                    data-cy={\n                      classNames(\n                        { RemoveButton: selectedGood === good },\n                        { AddButton: selectedGood !== good },\n                      )\n                    }\n                    type=\"button\"\n                    className={classNames(\n                      'button',\n                      { 'is-info': selectedGood === good },\n                    )}\n                    onClick={selectedGood === good\n                      ? this.clearSelection\n                      : () => {\n                        this.selectGood(good);\n                      }}\n                  >\n                    {selectedGood === good\n                      ? ('-')\n                      : ('+')}\n                  </button>\n\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}